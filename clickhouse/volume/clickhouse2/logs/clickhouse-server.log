2025.08.06 04:58:27.829324 [ 1 ] {} <Information> Application: Starting ClickHouse 25.7.1.3997 (revision: 54500, git hash: 28a03cae61b5719d4eb2ebd6464b2ed0cae9e2f9, build id: C8FE0DEE66A39666596055F0FF0AF2AA21B4764C), PID 1
2025.08.06 04:58:27.829373 [ 1 ] {} <Information> Application: starting up
2025.08.06 04:58:27.829386 [ 1 ] {} <Information> Application: OS name: Linux, version: 6.8.0-1030-azure, architecture: x86_64
2025.08.06 04:58:27.829422 [ 1 ] {} <Information> Jemalloc: Value for background_thread set to true (from true)
2025.08.06 04:58:27.964605 [ 1 ] {} <Information> Application: Available RAM: 7.76 GiB; logical cores: 2; used cores: 2.
2025.08.06 04:58:27.964797 [ 1 ] {} <Information> Application: Available CPU instruction sets: SSE, SSE2, SSE3, SSSE3, SSE41, SSE42, F16C, POPCNT, BMI1, BMI2, PCLMUL, AES, AVX, FMA, AVX2, SHA, ADX, RDRAND, RDSEED, RDTSCP, CLFLUSHOPT, CLWB, XSAVE, OSXSAVE
2025.08.06 04:58:27.965576 [ 1 ] {} <Information> CgroupsReader: Will create cgroup reader from '/sys/fs/cgroup/' (cgroups version: v2)
2025.08.06 04:58:31.089921 [ 1 ] {} <Information> Application: Integrity check of the executable successfully passed (checksum: 6F6071C2010AEFE8386EE783834ADED3)
2025.08.06 04:58:31.090010 [ 1 ] {} <Information> MemoryWorker: Starting background memory thread with period of 50ms, using Cgroups as source
2025.08.06 04:58:31.090270 [ 1 ] {} <Information> BackgroundSchedulePool/BgSchPool: Create BackgroundSchedulePool with 512 threads
2025.08.06 04:58:31.141797 [ 84 ] {} <Information> MemoryTracker: Correcting the value of global memory tracker from 6.13 MiB to 61.75 MiB
2025.08.06 04:58:31.409614 [ 1 ] {} <Information> Application: Lowered mark cache size to 3.88 GiB because the system has limited RAM
2025.08.06 04:58:31.409647 [ 1 ] {} <Information> Application: Lowered primary index cache size to 3.88 GiB because the system has limited RAM
2025.08.06 04:58:31.409651 [ 1 ] {} <Information> Application: Lowered index mark cache size to 3.88 GiB because the system has limited RAM
2025.08.06 04:58:31.409664 [ 1 ] {} <Information> Application: Lowered vector similarity index cache size to 3.88 GiB because the system has limited RAM
2025.08.06 04:58:31.443393 [ 1 ] {} <Information> Application: Changed setting 'max_server_memory_usage' to 6.98 GiB (7.76 GiB available memory * 0.90 max_server_memory_usage_to_ram_ratio)
2025.08.06 04:58:31.443428 [ 1 ] {} <Information> Application: Setting merges_mutations_memory_usage_soft_limit was set to 3.88 GiB (7.76 GiB available * 0.50 merges_mutations_memory_usage_to_ram_ratio)
2025.08.06 04:58:31.450385 [ 1 ] {} <Information> Application: Merges and mutations memory limit is set to 3.88 GiB
2025.08.06 04:58:31.452971 [ 1 ] {} <Information> Application: Setting max_remote_read_network_bandwidth_for_server was set to 0
2025.08.06 04:58:31.452994 [ 1 ] {} <Information> Application: Setting max_remote_write_network_bandwidth_for_server was set to 0
2025.08.06 04:58:31.453000 [ 1 ] {} <Information> Application: Setting max_local_read_bandwidth_for_server was set to 0
2025.08.06 04:58:31.453009 [ 1 ] {} <Information> Application: Setting max_local_write_bandwidth_for_server was set to 0
2025.08.06 04:58:31.453014 [ 1 ] {} <Information> Application: ConcurrencyControl limit is set to UNLIMITED CPU slots with 'round_robin' scheduler
2025.08.06 04:58:31.453032 [ 1 ] {} <Information> BackgroundSchedulePool/BgBufSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 04:58:31.458117 [ 1 ] {} <Information> BackgroundSchedulePool/BgMBSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 04:58:31.475178 [ 1 ] {} <Information> BackgroundSchedulePool/BgDistSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 04:58:31.554660 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.7.1.3997 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.08.06 04:58:31.554981 [ 1 ] {} <Information> Application: Listening for replica communication (interserver): http://0.0.0.0:9009
2025.08.06 04:58:31.561298 [ 1 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.08.06 04:58:31.561321 [ 1 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.08.06 04:58:31.561654 [ 1 ] {} <Information> CgroupsMemoryUsageObserver: Started cgroup current memory usage observer thread
2025.08.06 04:58:31.561896 [ 650 ] {} <Information> CgroupsMemoryUsageObserver: Memory amount initially available to the process is 7.76 GiB
2025.08.06 04:58:31.565651 [ 1 ] {} <Information> Context: Initialized background executor for merges and mutations with num_threads=16, num_tasks=32, scheduling_policy=round_robin
2025.08.06 04:58:31.566323 [ 1 ] {} <Information> Context: Initialized background executor for move operations with num_threads=8, num_tasks=8
2025.08.06 04:58:31.567549 [ 1 ] {} <Information> Context: Initialized background executor for fetches with num_threads=16, num_tasks=16
2025.08.06 04:58:31.568062 [ 1 ] {} <Information> Context: Initialized background executor for common operations (e.g. clearing old parts) with num_threads=8, num_tasks=8
2025.08.06 04:58:31.575839 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.08.06 04:58:31.583635 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `sudo sh -c 'echo 1 > /proc/sys/kernel/task_delayacct'` or by using sysctl.
2025.08.06 04:58:31.583932 [ 1 ] {} <Information> DNSCacheUpdater: Update period 15 seconds
2025.08.06 04:58:31.584507 [ 1 ] {} <Information> Application: Loading metadata from /var/lib/clickhouse/
2025.08.06 04:58:31.584532 [ 1 ] {} <Information> Context: Database disk name: default
2025.08.06 04:58:31.584540 [ 1 ] {} <Information> Context: Database disk name: default, path: /var/lib/clickhouse/
2025.08.06 04:58:31.586191 [ 1 ] {} <Information> DatabaseAtomic (system): Metadata disk default, path /var/lib/clickhouse/
2025.08.06 04:58:31.596484 [ 1 ] {} <Information> DatabaseAtomic (system): Metadata processed, database system has 0 tables, 0 dictionaries and 0 materialized views in total.
2025.08.06 04:58:31.596511 [ 1 ] {} <Information> TablesLoader: Parsed metadata of 0 tables in 1 databases in 4.8901e-05 sec
2025.08.06 04:58:31.737080 [ 715 ] {} <Error> void DB::AsyncLoader::worker(Pool &): std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build))
2025.08.06 04:58:31.834782 [ 1 ] {} <Error> Application: Caught exception while loading metadata: Code: 722. DB::Exception: Waited job failed: Code: 695. DB::Exception: Load job 'startup Atomic database system' failed: std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build)). (ASYNC_LOAD_FAILED) (version 25.7.1.3997 (official build)). (ASYNC_LOAD_WAIT_FAILED), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000127c721b
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000bfd62cc
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x000000000bfd5feb
3. DB::AsyncLoader::wait(std::shared_ptr<DB::LoadJob> const&, bool) @ 0x0000000012ae52d1
4. DB::waitLoad(unsigned long, std::vector<std::shared_ptr<DB::LoadTask>, std::allocator<std::shared_ptr<DB::LoadTask>>> const&, bool) @ 0x0000000012ac8f1e
5. DB::loadMetadataSystem(std::shared_ptr<DB::Context>, bool) @ 0x00000000170c36de
6. DB::Server::main(std::vector<String, std::allocator<String>> const&) @ 0x0000000012b1338a
7. Poco::Util::Application::run() @ 0x000000001d8bb466
8. DB::Server::run() @ 0x0000000012afc290
9. mainEntryClickHouseServer(int, char**) @ 0x0000000012af9273
10. main @ 0x000000000bfd1b5d
11. ? @ 0x0000000000029d90
12. ? @ 0x0000000000029e40
13. _start @ 0x00000000072b402e
 (version 25.7.1.3997 (official build))
2025.08.06 04:58:31.834868 [ 1 ] {} <Information> Application: Stopping AsyncLoader.
2025.08.06 04:58:31.835912 [ 1 ] {} <Information> CgroupsMemoryUsageObserver: Stopped cgroup current memory usage observer thread
2025.08.06 04:58:31.838398 [ 1 ] {} <Information> Application: Shutting down storages.
2025.08.06 04:58:31.850758 [ 1 ] {} <Information> Context: Shutdown disk default
2025.08.06 04:58:31.895026 [ 1 ] {} <Information> Application: Closed all listening sockets.
2025.08.06 04:58:31.895046 [ 1 ] {} <Information> Application: Closed connections to servers for tables.
2025.08.06 04:58:31.921744 [ 1 ] {} <Information> Application: Waiting for background threads
2025.08.06 04:58:32.016996 [ 1 ] {} <Information> Application: Background threads finished in 95 ms
2025.08.06 04:58:32.018067 [ 1 ] {} <Error> Application: Code: 722. DB::Exception: Waited job failed: Code: 695. DB::Exception: Load job 'startup Atomic database system' failed: std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build)). (ASYNC_LOAD_FAILED) (version 25.7.1.3997 (official build)). (ASYNC_LOAD_WAIT_FAILED), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000127c721b
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000bfd62cc
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x000000000bfd5feb
3. DB::AsyncLoader::wait(std::shared_ptr<DB::LoadJob> const&, bool) @ 0x0000000012ae52d1
4. DB::waitLoad(unsigned long, std::vector<std::shared_ptr<DB::LoadTask>, std::allocator<std::shared_ptr<DB::LoadTask>>> const&, bool) @ 0x0000000012ac8f1e
5. DB::loadMetadataSystem(std::shared_ptr<DB::Context>, bool) @ 0x00000000170c36de
6. DB::Server::main(std::vector<String, std::allocator<String>> const&) @ 0x0000000012b1338a
7. Poco::Util::Application::run() @ 0x000000001d8bb466
8. DB::Server::run() @ 0x0000000012afc290
9. mainEntryClickHouseServer(int, char**) @ 0x0000000012af9273
10. main @ 0x000000000bfd1b5d
11. ? @ 0x0000000000029d90
12. ? @ 0x0000000000029e40
13. _start @ 0x00000000072b402e
 (version 25.7.1.3997 (official build))
2025.08.06 04:58:32.018871 [ 1 ] {} <Information> Application: shutting down
2025.08.06 04:58:32.020368 [ 79 ] {} <Information> BaseDaemon: Stop SignalListener thread
2025.08.06 05:00:42.069007 [ 1 ] {} <Information> Application: Starting ClickHouse 25.7.1.3997 (revision: 54500, git hash: 28a03cae61b5719d4eb2ebd6464b2ed0cae9e2f9, build id: C8FE0DEE66A39666596055F0FF0AF2AA21B4764C), PID 1
2025.08.06 05:00:42.069082 [ 1 ] {} <Information> Application: starting up
2025.08.06 05:00:42.071197 [ 1 ] {} <Information> Application: OS name: Linux, version: 6.8.0-1030-azure, architecture: x86_64
2025.08.06 05:00:42.075910 [ 1 ] {} <Information> Jemalloc: Value for background_thread set to true (from true)
2025.08.06 05:00:42.216565 [ 1 ] {} <Information> Application: Available RAM: 7.76 GiB; logical cores: 2; used cores: 2.
2025.08.06 05:00:42.216626 [ 1 ] {} <Information> Application: Available CPU instruction sets: SSE, SSE2, SSE3, SSSE3, SSE41, SSE42, F16C, POPCNT, BMI1, BMI2, PCLMUL, AES, AVX, FMA, AVX2, SHA, ADX, RDRAND, RDSEED, RDTSCP, CLFLUSHOPT, CLWB, XSAVE, OSXSAVE
2025.08.06 05:00:42.217862 [ 1 ] {} <Information> CgroupsReader: Will create cgroup reader from '/sys/fs/cgroup/' (cgroups version: v2)
2025.08.06 05:00:44.193556 [ 1 ] {} <Information> Application: Integrity check of the executable successfully passed (checksum: 6F6071C2010AEFE8386EE783834ADED3)
2025.08.06 05:00:44.193596 [ 1 ] {} <Information> MemoryWorker: Starting background memory thread with period of 50ms, using Cgroups as source
2025.08.06 05:00:44.194802 [ 1 ] {} <Information> BackgroundSchedulePool/BgSchPool: Create BackgroundSchedulePool with 512 threads
2025.08.06 05:00:44.245464 [ 82 ] {} <Information> MemoryTracker: Correcting the value of global memory tracker from 10.52 MiB to 67.53 MiB
2025.08.06 05:00:44.477880 [ 1 ] {} <Information> Application: Lowered mark cache size to 3.88 GiB because the system has limited RAM
2025.08.06 05:00:44.477954 [ 1 ] {} <Information> Application: Lowered primary index cache size to 3.88 GiB because the system has limited RAM
2025.08.06 05:00:44.478028 [ 1 ] {} <Information> Application: Lowered index mark cache size to 3.88 GiB because the system has limited RAM
2025.08.06 05:00:44.478034 [ 1 ] {} <Information> Application: Lowered vector similarity index cache size to 3.88 GiB because the system has limited RAM
2025.08.06 05:00:44.485385 [ 1 ] {} <Information> Application: Changed setting 'max_server_memory_usage' to 6.98 GiB (7.76 GiB available memory * 0.90 max_server_memory_usage_to_ram_ratio)
2025.08.06 05:00:44.485491 [ 1 ] {} <Information> Application: Setting merges_mutations_memory_usage_soft_limit was set to 3.88 GiB (7.76 GiB available * 0.50 merges_mutations_memory_usage_to_ram_ratio)
2025.08.06 05:00:44.485558 [ 1 ] {} <Information> Application: Merges and mutations memory limit is set to 3.88 GiB
2025.08.06 05:00:44.504090 [ 1 ] {} <Information> Application: Setting max_remote_read_network_bandwidth_for_server was set to 0
2025.08.06 05:00:44.505397 [ 1 ] {} <Information> Application: Setting max_remote_write_network_bandwidth_for_server was set to 0
2025.08.06 05:00:44.506626 [ 1 ] {} <Information> Application: Setting max_local_read_bandwidth_for_server was set to 0
2025.08.06 05:00:44.506751 [ 1 ] {} <Information> Application: Setting max_local_write_bandwidth_for_server was set to 0
2025.08.06 05:00:44.507003 [ 1 ] {} <Information> Application: ConcurrencyControl limit is set to UNLIMITED CPU slots with 'round_robin' scheduler
2025.08.06 05:00:44.507109 [ 1 ] {} <Information> BackgroundSchedulePool/BgBufSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 05:00:44.530611 [ 1 ] {} <Information> BackgroundSchedulePool/BgMBSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 05:00:44.540402 [ 1 ] {} <Information> BackgroundSchedulePool/BgDistSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 05:00:44.636756 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.7.1.3997 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.08.06 05:00:44.638023 [ 1 ] {} <Information> Application: Listening for replica communication (interserver): http://0.0.0.0:9009
2025.08.06 05:00:44.664126 [ 1 ] {} <Information> CgroupsMemoryUsageObserver: Started cgroup current memory usage observer thread
2025.08.06 05:00:44.664391 [ 648 ] {} <Information> CgroupsMemoryUsageObserver: Memory amount initially available to the process is 7.76 GiB
2025.08.06 05:00:44.669554 [ 1 ] {} <Information> Context: Initialized background executor for merges and mutations with num_threads=16, num_tasks=32, scheduling_policy=round_robin
2025.08.06 05:00:44.670206 [ 1 ] {} <Information> Context: Initialized background executor for move operations with num_threads=8, num_tasks=8
2025.08.06 05:00:44.673803 [ 1 ] {} <Information> Context: Initialized background executor for fetches with num_threads=16, num_tasks=16
2025.08.06 05:00:44.674598 [ 1 ] {} <Information> Context: Initialized background executor for common operations (e.g. clearing old parts) with num_threads=8, num_tasks=8
2025.08.06 05:00:44.699401 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.08.06 05:00:44.743934 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `sudo sh -c 'echo 1 > /proc/sys/kernel/task_delayacct'` or by using sysctl.
2025.08.06 05:00:44.744095 [ 1 ] {} <Information> DNSCacheUpdater: Update period 15 seconds
2025.08.06 05:00:44.751736 [ 1 ] {} <Information> Application: Loading metadata from /var/lib/clickhouse/
2025.08.06 05:00:44.751787 [ 1 ] {} <Information> Context: Database disk name: default
2025.08.06 05:00:44.751806 [ 1 ] {} <Information> Context: Database disk name: default, path: /var/lib/clickhouse/
2025.08.06 05:00:44.773160 [ 1 ] {} <Information> DatabaseAtomic (system): Metadata disk default, path /var/lib/clickhouse/
2025.08.06 05:00:44.774257 [ 1 ] {} <Information> DatabaseAtomic (system): Metadata processed, database system has 0 tables, 0 dictionaries and 0 materialized views in total.
2025.08.06 05:00:44.775423 [ 1 ] {} <Information> TablesLoader: Parsed metadata of 0 tables in 1 databases in 0.001179472 sec
2025.08.06 05:00:44.850102 [ 713 ] {} <Error> void DB::AsyncLoader::worker(Pool &): std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build))
2025.08.06 05:00:44.934728 [ 1 ] {} <Error> Application: Caught exception while loading metadata: Code: 722. DB::Exception: Waited job failed: Code: 695. DB::Exception: Load job 'startup Atomic database system' failed: std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build)). (ASYNC_LOAD_FAILED) (version 25.7.1.3997 (official build)). (ASYNC_LOAD_WAIT_FAILED), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000127c721b
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000bfd62cc
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x000000000bfd5feb
3. DB::AsyncLoader::wait(std::shared_ptr<DB::LoadJob> const&, bool) @ 0x0000000012ae52d1
4. DB::waitLoad(unsigned long, std::vector<std::shared_ptr<DB::LoadTask>, std::allocator<std::shared_ptr<DB::LoadTask>>> const&, bool) @ 0x0000000012ac8f1e
5. DB::loadMetadataSystem(std::shared_ptr<DB::Context>, bool) @ 0x00000000170c36de
6. DB::Server::main(std::vector<String, std::allocator<String>> const&) @ 0x0000000012b1338a
7. Poco::Util::Application::run() @ 0x000000001d8bb466
8. DB::Server::run() @ 0x0000000012afc290
9. mainEntryClickHouseServer(int, char**) @ 0x0000000012af9273
10. main @ 0x000000000bfd1b5d
11. ? @ 0x0000000000029d90
12. ? @ 0x0000000000029e40
13. _start @ 0x00000000072b402e
 (version 25.7.1.3997 (official build))
2025.08.06 05:00:44.934821 [ 1 ] {} <Information> Application: Stopping AsyncLoader.
2025.08.06 05:00:44.937626 [ 1 ] {} <Information> CgroupsMemoryUsageObserver: Stopped cgroup current memory usage observer thread
2025.08.06 05:00:44.937946 [ 1 ] {} <Information> Application: Shutting down storages.
2025.08.06 05:00:44.943599 [ 1 ] {} <Information> Context: Shutdown disk default
2025.08.06 05:00:44.967592 [ 1 ] {} <Information> Application: Closed all listening sockets.
2025.08.06 05:00:44.967618 [ 1 ] {} <Information> Application: Closed connections to servers for tables.
2025.08.06 05:00:45.004454 [ 1 ] {} <Information> Application: Waiting for background threads
2025.08.06 05:00:45.112746 [ 1 ] {} <Information> Application: Background threads finished in 108 ms
2025.08.06 05:00:45.114849 [ 1 ] {} <Error> Application: Code: 722. DB::Exception: Waited job failed: Code: 695. DB::Exception: Load job 'startup Atomic database system' failed: std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build)). (ASYNC_LOAD_FAILED) (version 25.7.1.3997 (official build)). (ASYNC_LOAD_WAIT_FAILED), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000127c721b
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000bfd62cc
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x000000000bfd5feb
3. DB::AsyncLoader::wait(std::shared_ptr<DB::LoadJob> const&, bool) @ 0x0000000012ae52d1
4. DB::waitLoad(unsigned long, std::vector<std::shared_ptr<DB::LoadTask>, std::allocator<std::shared_ptr<DB::LoadTask>>> const&, bool) @ 0x0000000012ac8f1e
5. DB::loadMetadataSystem(std::shared_ptr<DB::Context>, bool) @ 0x00000000170c36de
6. DB::Server::main(std::vector<String, std::allocator<String>> const&) @ 0x0000000012b1338a
7. Poco::Util::Application::run() @ 0x000000001d8bb466
8. DB::Server::run() @ 0x0000000012afc290
9. mainEntryClickHouseServer(int, char**) @ 0x0000000012af9273
10. main @ 0x000000000bfd1b5d
11. ? @ 0x0000000000029d90
12. ? @ 0x0000000000029e40
13. _start @ 0x00000000072b402e
 (version 25.7.1.3997 (official build))
2025.08.06 05:00:45.115069 [ 1 ] {} <Information> Application: shutting down
2025.08.06 05:00:45.115834 [ 77 ] {} <Information> BaseDaemon: Stop SignalListener thread
2025.08.06 05:05:26.771457 [ 1 ] {} <Information> Application: Starting ClickHouse 25.7.1.3997 (revision: 54500, git hash: 28a03cae61b5719d4eb2ebd6464b2ed0cae9e2f9, build id: C8FE0DEE66A39666596055F0FF0AF2AA21B4764C), PID 1
2025.08.06 05:05:26.774299 [ 1 ] {} <Information> Application: starting up
2025.08.06 05:05:26.775016 [ 1 ] {} <Information> Application: OS name: Linux, version: 6.8.0-1030-azure, architecture: x86_64
2025.08.06 05:05:26.775349 [ 1 ] {} <Information> Jemalloc: Value for background_thread set to true (from true)
2025.08.06 05:05:26.793967 [ 1 ] {} <Information> Application: Available RAM: 7.76 GiB; logical cores: 2; used cores: 2.
2025.08.06 05:05:26.794890 [ 1 ] {} <Information> Application: Available CPU instruction sets: SSE, SSE2, SSE3, SSSE3, SSE41, SSE42, F16C, POPCNT, BMI1, BMI2, PCLMUL, AES, AVX, FMA, AVX2, SHA, ADX, RDRAND, RDSEED, RDTSCP, CLFLUSHOPT, CLWB, XSAVE, OSXSAVE
2025.08.06 05:05:26.795800 [ 1 ] {} <Information> CgroupsReader: Will create cgroup reader from '/sys/fs/cgroup/' (cgroups version: v2)
2025.08.06 05:05:27.263811 [ 1 ] {} <Information> Application: Integrity check of the executable successfully passed (checksum: 6F6071C2010AEFE8386EE783834ADED3)
2025.08.06 05:05:27.263986 [ 1 ] {} <Information> MemoryWorker: Starting background memory thread with period of 50ms, using Cgroups as source
2025.08.06 05:05:27.264197 [ 1 ] {} <Information> BackgroundSchedulePool/BgSchPool: Create BackgroundSchedulePool with 512 threads
2025.08.06 05:05:27.323794 [ 85 ] {} <Information> MemoryTracker: Correcting the value of global memory tracker from 14.02 MiB to 83.52 MiB
2025.08.06 05:05:27.465152 [ 1 ] {} <Information> Application: Lowered mark cache size to 3.88 GiB because the system has limited RAM
2025.08.06 05:05:27.465191 [ 1 ] {} <Information> Application: Lowered primary index cache size to 3.88 GiB because the system has limited RAM
2025.08.06 05:05:27.465199 [ 1 ] {} <Information> Application: Lowered index mark cache size to 3.88 GiB because the system has limited RAM
2025.08.06 05:05:27.465202 [ 1 ] {} <Information> Application: Lowered vector similarity index cache size to 3.88 GiB because the system has limited RAM
2025.08.06 05:05:27.481036 [ 1 ] {} <Information> Application: Changed setting 'max_server_memory_usage' to 6.98 GiB (7.76 GiB available memory * 0.90 max_server_memory_usage_to_ram_ratio)
2025.08.06 05:05:27.481384 [ 1 ] {} <Information> Application: Setting merges_mutations_memory_usage_soft_limit was set to 3.88 GiB (7.76 GiB available * 0.50 merges_mutations_memory_usage_to_ram_ratio)
2025.08.06 05:05:27.481387 [ 1 ] {} <Information> Application: Merges and mutations memory limit is set to 3.88 GiB
2025.08.06 05:05:27.484003 [ 1 ] {} <Information> Application: Setting max_remote_read_network_bandwidth_for_server was set to 0
2025.08.06 05:05:27.484011 [ 1 ] {} <Information> Application: Setting max_remote_write_network_bandwidth_for_server was set to 0
2025.08.06 05:05:27.484014 [ 1 ] {} <Information> Application: Setting max_local_read_bandwidth_for_server was set to 0
2025.08.06 05:05:27.484016 [ 1 ] {} <Information> Application: Setting max_local_write_bandwidth_for_server was set to 0
2025.08.06 05:05:27.484021 [ 1 ] {} <Information> Application: ConcurrencyControl limit is set to UNLIMITED CPU slots with 'round_robin' scheduler
2025.08.06 05:05:27.484032 [ 1 ] {} <Information> BackgroundSchedulePool/BgBufSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 05:05:27.485130 [ 1 ] {} <Information> BackgroundSchedulePool/BgMBSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 05:05:27.511869 [ 1 ] {} <Information> BackgroundSchedulePool/BgDistSchPool: Create BackgroundSchedulePool with 16 threads
2025.08.06 05:05:27.539920 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.7.1.3997 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.08.06 05:05:27.544216 [ 1 ] {} <Information> Application: Listening for replica communication (interserver): http://0.0.0.0:9009
2025.08.06 05:05:27.593830 [ 1 ] {} <Information> CgroupsMemoryUsageObserver: Started cgroup current memory usage observer thread
2025.08.06 05:05:27.594120 [ 651 ] {} <Information> CgroupsMemoryUsageObserver: Memory amount initially available to the process is 7.76 GiB
2025.08.06 05:05:27.603831 [ 1 ] {} <Information> Context: Initialized background executor for merges and mutations with num_threads=16, num_tasks=32, scheduling_policy=round_robin
2025.08.06 05:05:27.628955 [ 1 ] {} <Information> Context: Initialized background executor for move operations with num_threads=8, num_tasks=8
2025.08.06 05:05:27.639552 [ 1 ] {} <Information> Context: Initialized background executor for fetches with num_threads=16, num_tasks=16
2025.08.06 05:05:27.648020 [ 1 ] {} <Information> Context: Initialized background executor for common operations (e.g. clearing old parts) with num_threads=8, num_tasks=8
2025.08.06 05:05:27.665346 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.08.06 05:05:27.665968 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `sudo sh -c 'echo 1 > /proc/sys/kernel/task_delayacct'` or by using sysctl.
2025.08.06 05:05:27.668701 [ 1 ] {} <Information> DNSCacheUpdater: Update period 15 seconds
2025.08.06 05:05:27.670125 [ 1 ] {} <Information> Application: Loading metadata from /var/lib/clickhouse/
2025.08.06 05:05:27.670916 [ 1 ] {} <Information> Context: Database disk name: default
2025.08.06 05:05:27.671064 [ 1 ] {} <Information> Context: Database disk name: default, path: /var/lib/clickhouse/
2025.08.06 05:05:27.671420 [ 1 ] {} <Information> DatabaseAtomic (system): Metadata disk default, path /var/lib/clickhouse/
2025.08.06 05:05:27.671874 [ 1 ] {} <Information> DatabaseAtomic (system): Metadata processed, database system has 0 tables, 0 dictionaries and 0 materialized views in total.
2025.08.06 05:05:27.671926 [ 1 ] {} <Information> TablesLoader: Parsed metadata of 0 tables in 1 databases in 7.7955e-05 sec
2025.08.06 05:05:27.673406 [ 716 ] {} <Error> void DB::AsyncLoader::worker(Pool &): std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build))
2025.08.06 05:05:27.674168 [ 1 ] {} <Error> Application: Caught exception while loading metadata: Code: 722. DB::Exception: Waited job failed: Code: 695. DB::Exception: Load job 'startup Atomic database system' failed: std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build)). (ASYNC_LOAD_FAILED) (version 25.7.1.3997 (official build)). (ASYNC_LOAD_WAIT_FAILED), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000127c721b
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000bfd62cc
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x000000000bfd5feb
3. DB::AsyncLoader::wait(std::shared_ptr<DB::LoadJob> const&, bool) @ 0x0000000012ae52d1
4. DB::waitLoad(unsigned long, std::vector<std::shared_ptr<DB::LoadTask>, std::allocator<std::shared_ptr<DB::LoadTask>>> const&, bool) @ 0x0000000012ac8f1e
5. DB::loadMetadataSystem(std::shared_ptr<DB::Context>, bool) @ 0x00000000170c36de
6. DB::Server::main(std::vector<String, std::allocator<String>> const&) @ 0x0000000012b1338a
7. Poco::Util::Application::run() @ 0x000000001d8bb466
8. DB::Server::run() @ 0x0000000012afc290
9. mainEntryClickHouseServer(int, char**) @ 0x0000000012af9273
10. main @ 0x000000000bfd1b5d
11. ? @ 0x0000000000029d90
12. ? @ 0x0000000000029e40
13. _start @ 0x00000000072b402e
 (version 25.7.1.3997 (official build))
2025.08.06 05:05:27.674286 [ 1 ] {} <Information> Application: Stopping AsyncLoader.
2025.08.06 05:05:27.674458 [ 1 ] {} <Information> CgroupsMemoryUsageObserver: Stopped cgroup current memory usage observer thread
2025.08.06 05:05:27.674743 [ 1 ] {} <Information> Application: Shutting down storages.
2025.08.06 05:05:27.676571 [ 1 ] {} <Information> Context: Shutdown disk default
2025.08.06 05:05:27.698800 [ 1 ] {} <Information> Application: Closed all listening sockets.
2025.08.06 05:05:27.698826 [ 1 ] {} <Information> Application: Closed connections to servers for tables.
2025.08.06 05:05:27.713494 [ 1 ] {} <Information> Application: Waiting for background threads
2025.08.06 05:05:27.826007 [ 1 ] {} <Information> Application: Background threads finished in 112 ms
2025.08.06 05:05:27.826538 [ 1 ] {} <Error> Application: Code: 722. DB::Exception: Waited job failed: Code: 695. DB::Exception: Load job 'startup Atomic database system' failed: std::exception. Code: 1001, type: std::__1::filesystem::filesystem_error, e.what() = filesystem error: in create_directories: Permission denied ["/var/lib/clickhouse/data/system"], Stack trace (when copying this message, always include the lines below):

0. std::system_error::system_error(std::error_code, String const&) @ 0x000000001e5a0c17
1. std::filesystem::filesystem_error::filesystem_error[abi:ne190107](String const&, std::filesystem::path const&, std::error_code) @ 0x000000001288f9ff
2. void std::filesystem::__throw_filesystem_error[abi:ne190107]<String&, std::filesystem::path const&, std::error_code const&>(String&, std::filesystem::path const&, std::error_code const&) @ 0x000000001e5585ad
3. std::filesystem::detail::ErrorHandler<bool>::report(std::error_code const&) const @ 0x000000001e55b542
4. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc8f
5. std::filesystem::__create_directories(std::filesystem::path const&, std::error_code*) @ 0x000000001e55bc60
6. DB::DiskLocal::createDirectories(String const&) @ 0x00000000160accfa
7. void std::__function::__policy_invoker<void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::DatabaseAtomic::startupDatabaseAsync(DB::AsyncLoader&, std::unordered_set<std::shared_ptr<DB::LoadJob>, std::hash<std::shared_ptr<DB::LoadJob>>, std::equal_to<std::shared_ptr<DB::LoadJob>>, std::allocator<std::shared_ptr<DB::LoadJob>>>, DB::LoadingStrictnessLevel)::$_0, void (DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&)>>(std::__function::__policy_storage const*, DB::AsyncLoader&, std::shared_ptr<DB::LoadJob> const&) @ 0x0000000015eb941a
8. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<DB::AsyncLoader::spawn(DB::AsyncLoader::Pool&, std::unique_lock<std::mutex>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000012aeb704
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() @ 0x000000001290a58b
10. void std::__function::__policy_invoker<void ()>::__call_impl[abi:ne190107]<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129111c6
11. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000012907792
12. void* std::__thread_proxy[abi:ne190107]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000001290ec9a
13. ? @ 0x0000000000094ac3
14. ? @ 0x0000000000125a04

Cannot print extra info for Poco::Exception (version 25.7.1.3997 (official build)). (ASYNC_LOAD_FAILED) (version 25.7.1.3997 (official build)). (ASYNC_LOAD_WAIT_FAILED), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000127c721b
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000bfd62cc
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x000000000bfd5feb
3. DB::AsyncLoader::wait(std::shared_ptr<DB::LoadJob> const&, bool) @ 0x0000000012ae52d1
4. DB::waitLoad(unsigned long, std::vector<std::shared_ptr<DB::LoadTask>, std::allocator<std::shared_ptr<DB::LoadTask>>> const&, bool) @ 0x0000000012ac8f1e
5. DB::loadMetadataSystem(std::shared_ptr<DB::Context>, bool) @ 0x00000000170c36de
6. DB::Server::main(std::vector<String, std::allocator<String>> const&) @ 0x0000000012b1338a
7. Poco::Util::Application::run() @ 0x000000001d8bb466
8. DB::Server::run() @ 0x0000000012afc290
9. mainEntryClickHouseServer(int, char**) @ 0x0000000012af9273
10. main @ 0x000000000bfd1b5d
11. ? @ 0x0000000000029d90
12. ? @ 0x0000000000029e40
13. _start @ 0x00000000072b402e
 (version 25.7.1.3997 (official build))
2025.08.06 05:05:27.828109 [ 1 ] {} <Information> Application: shutting down
2025.08.06 05:05:27.830113 [ 81 ] {} <Information> BaseDaemon: Stop SignalListener thread
