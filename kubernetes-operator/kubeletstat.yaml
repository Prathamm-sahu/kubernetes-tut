apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
  namespace: default
rules:
  - apiGroups:
      - ""
      - apps
      - autoscaling
      - batch
      - extensions
      - policy
      - rbac.authorization.k8s.io
    resources:
      - componentstatuses
      - configmaps
      - nodes/proxy
      - daemonsets
      - deployments
      - events
      - cronjobs
      - statefulsets
      - endpoints
      - horizontalpodautoscalers
      - ingress
      - jobs
      - limitranges
      - namespaces
      - nodes
      - pods
      - nodes/stats
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
  namespace: default
subjects:
  - kind: ServiceAccount
    name: otel-collector
    namespace: default
roleRef:
  kind: ClusterRole
  name: otel-collector
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector
  namespace: default
data:
  config.yaml: |
    receivers:
      k8s_cluster:
        auth_type: serviceAccount

      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 30s
        endpoint: https://${env:KUBE_NODE_NAME}:10250
        extra_metadata_labels:
          - container.id
        insecure_skip_verify: true
        k8s_api_config:
          auth_type: serviceAccount
        metric_groups:
          - volume
          - node
          - pod
          - container
    processors:
      batch:
        send_batch_size: 10000
        timeout: 10s
      k8sattributes:
        auth_type: serviceAccount
        passthrough: true
        filter:
          node_from_env_var: KUBE_NODE_NAME
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
            - k8s.statefulset.uid
            - k8s.replicaset.uid
            - k8s.daemonset.uid
            - k8s.deployment.uid
            - k8s.job.uid
            - k8s.pod.ip
            - k8s.daemonset.name
            - k8s.statefulset.name
            - k8s.replicaset.name
            - k8s.cronjob.name
            - k8s.job.name
          labels:
            - tag_name: app.label.component
              key: app.kubernetes.io/component
              from: pod
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection
      resourcedetection:
        detectors:
          - env
          - ec2
          - system
          - docker
        timeout: 5s
        override: false
      attributes/metrics:
        actions:
          - key: cluster
            value: "cluster-info" #add the cluster name
            action: insert

    exporters:
      debug: 
        verbosity: normal
      otlphttp:
        endpoint: "https://otel.kloudmate.com:4318"
        headers:
          Authorization: sk_iyilnCH59pgDAdZ5eGNmqead #add the required auth key
        timeout: 10s
        retry_on_failure:
          enabled: true

    service:
      pipelines:
        metrics:
          receivers: [kubeletstats, k8s_cluster]
          processors: [batch, k8sattributes, resourcedetection, attributes/metrics]
          exporters: [debug, otlphttp]

---
apiVersion: apps/v1
kind: DaemonSet

metadata:
  name: otel-collector
  namespace: default
spec:
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      serviceAccountName: otel-collector
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:latest
          args: ["--config=/etc/otel-collector-config/config.yaml"]
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              memory: "200Mi"
              cpu: "50m"
            limits:
              memory: "400Mi"
              cpu: "150m"
          volumeMounts:
            - name: config-vol
              mountPath: /etc/otel-collector-config
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varlogcontainers
              mountPath: /var/log/containers
              readOnly: true
      volumes:
        - name: config-vol
          configMap:
            name: otel-collector
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers

      securityContext:
        runAsUser: 0